/**
  @page ADC_DMA  ADC with DMA example description
  
  @verbatim
  ******************** (C) COPYRIGHT 2012 STMicroelectronics *******************
  * @file    ADC/ADC_DMA/readme.txt 
  * @author  MCD Application Team
  * @version V1.0.0
  * @date    18-May-2012
  * @brief   Description of ADC with DMA example
  ******************************************************************************
  *
  * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  * You may not use this file except in compliance with the License.
  * You may obtain a copy of the License at:
  *
  *        http://www.st.com/software_license_agreement_liberty_v2
  *
  * Unless required by applicable law or agreed to in writing, software 
  * distributed under the License is distributed on an "AS IS" BASIS, 
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  ******************************************************************************
   @endverbatim

@par Example Description 

This example describes how to use the ADC1 and DMA to transfer continuously 
converted data from ADC1 to memory.
The ADC1 is configured to convert continuously channel11, Voltage reference, 
Temperature sensor and Battery charge.
Each time an end of conversion occurs the DMA transfers, in circular mode, the
converted data from ADC1 DR register to the RegularConvData_Tab[4] table.
User can vary the ADC1 channel11 voltage using the EVAL Board potentiometer RV3.
The 4 converted voltages are displayed on the EVAL Board LCD.


@par Directory contents 

  - ADC/ADC_DMA/stm32f0xx_conf.h    Library Configuration file
  - ADC/ADC_DMA/stm32f0xx_it.c      Interrupt handlers
  - ADC/ADC_DMA/stm32f0xx_it.h      Interrupt handlers header file
  - ADC/ADC_DMA/main.c              Main program
  - ADC/ADC_DMA/main.h              Main program header file
  - ADC/ADC_DMA/system_stm32f0xx.c  STM32F0xx system source file
  
@note The "system_stm32f0xx.c" is generated by an automatic clock configuration 
      tool and can be easily customized to meet user application requirements. 
      To select different clock setup, use the "STM32F0xx_Clock_Configuration_VX.Y.Z.xls" 
      provided with the AN4055 package available on <a href="http://www.st.com/internet/mcu/class/1734.jsp">  ST Microcontrollers </a>

         
@par Hardware and Software environment

  - This example runs on STM32F0xx Devices.
  
  - This example has been tested with STMicroelectronics STM320518-EVAL (STM32F0xx)
    evaluation board and can be easily tailored to any other supported device 
    and development board.

  - STM320518-EVAL Set-up
     - Use potentiometer RV3


@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F0xx_StdPeriph_Templates
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example

 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */
