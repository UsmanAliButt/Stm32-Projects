/**
  @page ADC_LowPower ADC LowPower Example Description
  
  @verbatim
  ******************** (C) COPYRIGHT 2012 STMicroelectronics *******************
  * @file    ADC/ADC_LowPower/readme.txt 
  * @author  MCD Application Team
  * @version V1.0.0
  * @date    18-May-2012
  * @brief   brief   Description of the ADC Low Power mode example.
  ******************************************************************************
  *
  * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  * You may not use this file except in compliance with the License.
  * You may obtain a copy of the License at:
  *
  *        http://www.st.com/software_license_agreement_liberty_v2
  *
  * Unless required by applicable law or agreed to in writing, software 
  * distributed under the License is distributed on an "AS IS" BASIS, 
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  ******************************************************************************
   @endverbatim

@par Example Description 

This example provides a short description of how to use the ADC peripheral with 
Auto-delayed conversion mode and Auto-poweroff modes.

The ADC is triggered by TIM3_TRGO which is connected to TIM3_Update Event.
Each time the ADC is triggered, it converts the RV3 voltage (which correspond to
ADC channel11), and then the ADC enter in delay mode (no Overrun detect) until the
ADC data register has been read by pressing KEY button 

To active the Auto delay mode and also the Auto power off mode uncomment  "#define ADC_LOWPOWER ".
If "#define ADC_LOWPOWER" is commented the, an overrun interrupt is generated and
LED1 is toggled. Otherwise, LED1 remain OFF.


@par Directory contents 

  - ADC/ADC_LowPower/stm32f0xx_conf.h    Library Configuration file
  - ADC/ADC_LowPower/stm32f0xx_it.c      Interrupt handlers
  - ADC/ADC_LowPower/stm32f0xx_it.h      Interrupt handlers header file
  - ADC/ADC_LowPower/main.c              Main program
  - ADC/ADC_LowPower/main.h              Main program header file
  - ADC/ADC_LowPower/system_stm32f0xx.c  STM32F0xx system source file
  
@note The "system_stm32f0xx.c" is generated by an automatic clock configuration 
      tool and can be easily customized to meet user application requirements. 
      To select different clock setup, use the "STM32F0xx_Clock_Configuration_VX.Y.Z.xls" 
      provided with the AN4055 package available on <a href="http://www.st.com/internet/mcu/class/1734.jsp">  ST Microcontrollers </a>

         
@par Hardware and Software environment

  - This example runs on STM32F0xx Devices.
  
  - This example has been tested with STMicroelectronics STM320518-EVAL (STM32F0xx)
    evaluation board and can be easily tailored to any other supported device 
    and development board.

  - STM320518-EVAL Set-up
     - Use potentiometer RV3
     - Use key button


@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F0xx_StdPeriph_Templates
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example

 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */
