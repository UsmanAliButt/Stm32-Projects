/**
  @page COMP_AnalogWatchdog COMP Analog Watchdog example
  
  @verbatim
  ******************** (C) COPYRIGHT 2012 STMicroelectronics *******************
  * @file    COMP/COMP_AnalogWatchdog/readme.txt  
  * @author  MCD Application Team
  * @version V1.0.0
  * @date    18-May-2012
  * @brief   Description of the COMP Analog Watchdog Example.
  ******************************************************************************
  *
  * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  * You may not use this file except in compliance with the License.
  * You may obtain a copy of the License at:
  *
  *        http://www.st.com/software_license_agreement_liberty_v2
  *
  * Unless required by applicable law or agreed to in writing, software 
  * distributed under the License is distributed on an "AS IS" BASIS, 
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  ******************************************************************************
   @endverbatim

@par Example Description 

This example shows how to make an analog watchdog using the STM32F0xx COMPs 
peripherals in window mode:
  - The upper threshold is set to VREFINT = 1.22V
  - The lower threshold is set to VREFINT / 4 = 1.22V = 0.305V
  - The input voltage is configured to be connected to PA.01 (On STM320518-EVAL 
    RV3 (PC.01) is used to simulate an input voltage)

If the input voltage is above the higher threshold, LD3 and LD1 are turned On.
If the input voltage is under the lower threshold, LD2 and LD4 are turned On.
If the input voltage is within the thresholds, the MCU remains in STOP mode

@par Directory contents 

  - COMP/COMP_AnalogWatchdog/stm32f0xx_conf.h    Library Configuration file
  - COMP/COMP_AnalogWatchdog/stm32f0xx_it.c      Interrupt handlers
  - COMP/COMP_AnalogWatchdog/stm32f0xx_it.h      Interrupt handlers header file
  - COMP/COMP_AnalogWatchdog/main.c              Main program
  - COMP/COMP_AnalogWatchdog/main.h              Main Header file
  - COMP/COMP_AnalogWatchdog/system_stm32f0xx.c  STM32F0xx system source file
  
@note The "system_stm32f0xx.c" is generated by an automatic clock configuration 
      tool and can be easily customized to meet user application requirements. 
      To select different clock setup, use the "STM32F0xx_Clock_Configuration_VX.Y.Z.xls" 
      provided with the AN4055 package available on <a href="http://www.st.com/internet/mcu/class/1734.jsp">  ST Microcontrollers </a>
         
@par Hardware and Software environment

  - This example runs on STM32F0xx Devices.
  
  - This example has been tested with STMicroelectronics STM320518-EVAL (STM32F0xx)
    evaluation board and can be easily tailored to any other supported device 
    and development board.

  - STM320518-EVAL Set-up
    - Use LED1, LED2, LED3 and LED4 connected respectively to PC.10, PC.11 ,PG.12
      and PD.02 pins
      @note This example run in stand alone mode.
    - Use a wire to connect Potentiometer RV3 (PC.01 pin) to COMP2 non inverting input (PA.01)


@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F0xx_StdPeriph_Templates
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example

 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */
