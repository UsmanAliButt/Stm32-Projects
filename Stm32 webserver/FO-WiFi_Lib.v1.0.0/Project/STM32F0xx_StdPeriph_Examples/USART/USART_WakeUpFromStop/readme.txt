/**
  @page USART_WakeUpFromStop USART WakeUp from Stop mode Example
  
  @verbatim
  ******************** (C) COPYRIGHT 2012 STMicroelectronics *******************
  * @file    USART/USART_WakeUpFromStop/readme.txt 
  * @author  MCD Application Team
  * @version V1.0.0
  * @date    18-May-2012
  * @brief   Description of the USART WakeUp from Stop mode Example.
  ******************************************************************************
  *
  * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  * You may not use this file except in compliance with the License.
  * You may obtain a copy of the License at:
  *
  *        http://www.st.com/software_license_agreement_liberty_v2
  *
  * Unless required by applicable law or agreed to in writing, software 
  * distributed under the License is distributed on an "AS IS" BASIS, 
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  ******************************************************************************
   @endverbatim

@par Example Description 

This example provides a description of how to use the WakeUp from STOP mode capability
of the USART via the hyperterminal.

First, the USART1 is configured to WakeUp from STOP with StartBitMethod(when any
data is received on RX line).
After configuration, the MCU enters STOP mode and waits to be waken.
When a string is sent to USART1 via the hyperterminal, the MCU WakeUp from stop,
restore the system clock configuration and configures the systick to toggle LED's.
The LED's toggling is used to indicate that the MCU is Waken Up from stop.

The USART1 is configured as follow:
    - BaudRate = 115200 baud  
    - Word Length = 8 Bits 
    - One Stop Bit
    - No parity
    - Hardware flow control disabled (RTS and CTS signals)
    - Receive and transmit enabled


@par Directory contents 

  - USART/USART_WakeUpFromStop/stm32f0xx_conf.h    Library Configuration file
  - USART/USART_WakeUpFromStop/stm32f0xx_it.c      Interrupt handlers
  - USART/USART_WakeUpFromStop/stm32f0xx_it.h      Interrupt handlers header file
  - USART/USART_WakeUpFromStop/main.c              Main program   
  - USART/USART_WakeUpFromStop/main.h              Main program header file 
  - USART/USART_WakeUpFromStop/system_stm32f0xx.c  STM32F0xx system source file
  
@note The "system_stm32f0xx.c" is generated by an automatic clock configuration 
      tool and can be easily customized to meet user application requirements. 
      To select different clock setup, use the "STM32F0xx_Clock_Configuration_VX.Y.Z.xls" 
      provided with the AN4055 package available on <a href="http://www.st.com/internet/mcu/class/1734.jsp">  ST Microcontrollers </a>

         
@par Hardware and Software environment

  - This example runs on STM32F0xx Devices.
  
  - This example has been tested with STMicroelectronics STM320518-EVAL (STM32F0xx)
    evaluation board and can be easily tailored to any other supported device 
    and development board.

  - STM320518-EVAL Set-up
    - Connect a null-modem female/female RS232 cable between the DB9 connector 
      CN7 and PC serial port.
    - Make sure that JP3 is in position 5<->6 

  - Hyperterminal configuration:
    - BaudRate = 115200 baud
    - Word Length = 8 Bits
    - One Stop Bit
    - No parity
    - flow control: None 


@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F0xx_StdPeriph_Templates
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example

 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */
